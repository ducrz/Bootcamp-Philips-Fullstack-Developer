use DioAbril;

--Criando Tabela
CREATE TABLE PRODUTOS(
	CODIGO        INT NOT NULL,
	DESCRICAO     VARCHAR(50) NOT NULL,
	DATA_VALIDADE DATETIME,
	EAN           VARCHAR(15) NOT NULL,
	IND_INATIVO   INT NOT NULL DEFAULT 0
)

--Select
SELECT * FROM PRODUTOS;

-- Definindo CODIGO como PRIMARY KEY
ALTER TABLE PRODUTOS 
	ADD CONSTRAINT PK_PRODUTOS
		PRIMARY KEY (CODIGO);


-- Criando Índice
CREATE INDEX IDX01_PRODUTOS_EAN
			ON PRODUTOS(EAN);

-- Realizando Insert

INSERT INTO PRODUTOS (CODIGO, DESCRICAO, DATA_VALIDADE, EAN, IND_INATIVO)
		VALUES (1, 'Nome do Produto',GETDATE(), '1234567890121' , 0);

--Select
SELECT * FROM PRODUTOS;

-- Realizando Insert em Campos Específicos
INSERT INTO PRODUTOS (CODIGO, DESCRICAO, EAN)
		VALUES (2, 'Nome do Produto','21234567890121');

-- Select com Where
SELECT *
	FROM PRODUTOS
		WHERE CODIGO=2;


-- Select com LIKE %% - Consulta não indexada 
SELECT *
	FROM PRODUTOS
		WHERE DESCRICAO LIKE '%Produto%';

-- Funcionalidades de Agregação

SELECT COUNT(*) AS TOTAL
	FROM PRODUTOS;

-- Deletando Tabela LOJA
--DROP TABLE LOJA;

-- Criando Tabela LOJAs
CREATE TABLE LOJAS(
	CODIGO        INT NOT NULL,
	NOME          VARCHAR(50) NOT NULL,
	IND_INATIVO   INT NOT NULL DEFAULT 0,
	CONSTRAINT LOJAS_PK PRIMARY KEY(CODIGO)
);

-- Select
SELECT * FROM LOJAS;


--Insert

INSERT INTO LOJAS (CODIGO, NOME) VALUES (1000, 'Filial Chiapetta');
INSERT INTO LOJAS (CODIGO, NOME) VALUES (2000, 'Filial Cachoeira Paulista');
INSERT INTO LOJAS (CODIGO, NOME) VALUES (3000, 'Filial Independência');


-- Select CODIGO e Nome
SELECT CODIGO,NOME
	FROM LOJAS
	WHERE IND_INATIVO = 0;

-- Criando Tabela ESTOQUE

CREATE TABLE ESTOQUE(
	CODIGO_PRODUTO INT NOT NULL,
	CODIGO_FILIAL  INT NOT NULL,
	QUANTIDADE     DECIMAL NOT NULL DEFAULT 0,        
	CONSTRAINT ESTOQUE_PK PRIMARY KEY(CODIGO_PRODUTO, CODIGO_FILIAL)
);

-- Select
SELECT * FROM ESTOQUE;


-- Insert

--INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE)
--	VALUES (99, 10, 1);

-- Deletando

DELETE FROM ESTOQUE;

-- Criando CHAVE ESTRANGEIRA

ALTER TABLE ESTOQUE
	ADD CONSTRAINT FK_ESTOQUE_PRODUTOS
		FOREIGN KEY(CODIGO_PRODUTO)
			REFERENCES PRODUTOS(CODIGO);
		

ALTER TABLE ESTOQUE
	ADD CONSTRAINT FK_ESTOQUE_LOJAS
		FOREIGN KEY(CODIGO_FILIAL)
			REFERENCES LOJAS(CODIGO);
		
-- Removendo Chave Estrangeira

--ALTER TABLE ESTOQUE
--	DROP CONSTRAINT FK_ESTOQUE_LOJAS;

-- Insert

INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE)
	VALUES (1, 1000, 10);

-- Select
SELECT * FROM ESTOQUE;

-- Relacionando uma Tabela com a Outra - INNER JOIN
SELECT E.CODIGO_FILIAL,
	   L.NOME,
	   E.CODIGO_PRODUTO,
	   P.DESCRICAO,
	   E.QUANTIDADE
	FROM ESTOQUE E INNER JOIN LOJAS L
			ON E.CODIGO_FILIAL = L.CODIGO
		INNER JOIN PRODUTOS P
			ON E.CODIGO_PRODUTO = P.CODIGO;
