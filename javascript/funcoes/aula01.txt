Tipos de Função

Apresentação do curso


Estrutura e Função anônima

Definição comum de uma função

function nome(parametros){

	return;
}

Variáveis criadas dentro de uma função apenas podem ser utilizadas dentro dela.
Escopo da função.


Quando invocamos o "return", a função para de ser executada.



Função Anônima

Funções que representam expressões.

Uma variável pode armazenar uma função.



const soma = function (a,b){
	return a+b;
}

soma(1,2);
soma(5,4);


Função autoinvocável e Callbacks


IIFE (Immediately Invoked Function Expression)

(
	function(){
		let name = "Digital Innovation One";
		return name;
	
	}
)();

Uma função anônima entre parênteses, seguida por outro par de parênteses, que
representa sua chamada.


(
	function(a,b){
		return a+b;
	}

)(1,2);


const soma3={
	function(){
		return a+b;
	}
}(1,2);

console.log(soma3);

Também pode ser utilizada com parâmetros ou armazenada em uma variável.



Callbacks - Funções

Uma função passada como argumento para outra.

Utilizando callbaks, você tem maior controle da ordem de chamadas.

const calc = function(operacao, num1, num2){
	return operacao(num1, num2);
}

const soma = function(num1, num2){
	return num1 + num2;
}

const sub = function(num1, num2){
	return num1 = num2;
}

const resultSoma = calc(soma, 1,2);
const resultSub = calc(sub, 1, 2);

console.log(resultSub);
console.log(resultSoma);

Utilizando callbacks, você tem maior controle da ordem de chamadas.





